
#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1          &kp N2            &kp N3          &kp N4           &kp N5             &kp UP_ARROW     &kp N6           &kp N7           &kp N8            &kp N9            &kp N0             &kp BACKSPACE
&kp TAB     &kp Q           &kp W             &kp E           &kp R            &kp T              &kp DOWN_ARROW   &kp Y            &kp U            &kp I             &kp O             &kp P              &kp BACKSPACE
&kp LSHFT   &kp A           &kp S             &kp D           &kp F            &kp G              &kp LEFT_ARROW   &kp H            &kp J            &kp K             &kp L             &kp COLON          &kp ENTER
&kp LCTRL   &kp Z           &kp X             &kp C           &kp V            &kp B              &kp RIGHT_ARROW  &kp N            &kp M            &kp COMMA         &kp DOT           &kp QUESTION       &kp ENTER 
&kp C_MUTE  &mo 2           &kp LEFT_ALT      &kp SPACE       &kp SPACE        &mo 1              &kp ENTER        &kp LEFT_ARROW   &kp ENTER         &kp DOUBLE_QUOTES      &kp RIGHT_ARROW  &kp LEFT_GUI 
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE    &kp EXCLAMATION   &kp  AT_SIGN     &kp  HASH         &kp  DOLLAR      &kp  PERCENT       &mmv MOVE_UP     &kp CARET        &kp AMPERSAND      &kp ASTERISK      &kp LEFT_PARENTHESIS     &kp RIGHT_PARENTHESIS       &kp MINUS
&kp TILDE    &kp BACKSLASH     &mkp LCLK        &mkp MCLK         &mkp RCLK        &mkp MB4           &mmv MOVE_DOWN   &kp PG_UP        &kp HOME           &kp UP_ARROW      &kp END                  &kp INSERT                  &kp UNDERSCORE
&kp CAPS     &kp PIPE          &none            &none             &none            &mkp MB5           &mmv MOVE_LEFT   &kp PG_DN        &kp LEFT_ARROW     &kp DOWN_ARROW    &kp RIGHT_ARROW          &kp SEMICOLON               &kp PLUS
&trans       &bt BT_SEL 0      &bt BT_SEL 1     &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_RIGHT  &kp LEFT_BRACKET &kp RIGHT_BRACKET  &kp LESS_THAN     &kp GREATER_THAN         &kp SLASH                   &kp EQUAL
&kp C_MUTE   &trans            &trans           &trans            &trans           &trans             &mkp LCLK        &kp LEFT_BRACE   &kp RIGHT_BRACE    &kp SINGLE_QUOTE  &kp RIGHT_ARROW          &kp LEFT_GUI 
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp GRAVE   &kp F1            &kp F2            &kp F3            &kp F4           &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8            &kp F9            &kp F10         &kp BACKSPACE  
&trans      &out OUT_USB      &out OUT_BLE      &soft_off         &sys_reset       &bootloader        &mmv MOVE_DOWN   &kp NUMBER_7     &kp NUMBER_8     &kp NUMBER_9      &kp KP_PLUS       &kp F11         &kp BACKSPACE  
&kp LSHFT   &rgb_ug RGB_EFF   &rgb_ug RGB_EFR   &rgb_ug RGB_SPI   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD    &mmv MOVE_LEFT   &kp NUMBER_4     &kp NUMBER_5     &kp NUMBER_6      &kp KP_MINUS      &kp F12         &kp ENTER
&trans      &bt BT_CLR        &bt BT_CLR_ALL    &none             &rgb_ug RGB_ON   &rgb_ug RGB_OFF    &mmv MOVE_RIGHT  &kp NUMBER_1     &kp NUMBER_2     &kp NUMBER_3      &kp KP_MULTIPLY   &none           &kp ENTER
&kp C_MUTE  &trans            &trans            &trans            &trans           &trans             &mkp LCLK        &kp DELETE       &kp NUMBER_0     &kp NUMBER_0      &kp KP_DOT        &kp KP_DIVIDE 
            >;  

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
